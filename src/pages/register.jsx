
import Header from "@/components/Header"
import Head from "next/head"
import { useState, useEffect } from "react"
import { getAccount, requestAccount } from '@/web3-services/metamask_connection';

import styles from "../styles/Register.module.css"
import GenericForm from "@/components/GenericForm";
import { createAccount } from "@/web3-services/decentralized_chat_functions";
import GenericLink from "@/components/GenericLink";


const Register = () => {


    const [account, setAccount] = useState("")
    const [message, setMessage] = useState()
    const [inputNickname, setInputNickame] = useState("")
    const [txLoading,setTxLoading] = useState(false)

    function handleOnChange(e) {
        setInputNickame(e.target.value)
    }
    useEffect(() => {
        getAccount().then((result) => {

            setAccount(result)
        }).catch((err) => {
            console.log(err)
            setMessage(err.toString())
        });
        if (window.ethereum) {
            window.ethereum.on("accountsChanged", () => {
                getAccount().then((result) => {

                    setAccount(result)
                }).catch((err) => {
                    console.log(err)
                });
            })
        }


    }, [])

    function handleCreateAccountClick() {
        if(inputNickname){
            setTxLoading(true)
            createAccount(inputNickname,account).then((result) => {
                if(result){
                    setTxLoading(false)
                    alert("AccountCreated")
                }
            }).catch((err) => {
                setTxLoading(false)
                console.log(err)
            });
        }else{
            alert("Type a valid Nickname")
        }
    }

    function handleConnectWalletClick() {
        requestAccount().then((result) => {
            setAccount(result)
        }).catch((err) => {

            console.log("caiu no catch")

            console.log(err)
        });
    }
    
    return (
        <>
            <Head>
                <title>Register your account</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header containsNavBar={true} onClick={handleConnectWalletClick} account={account} />
            {txLoading ? (<h1>Processing your transaction.</h1>) : (<></>)}
            <main className={styles.registerPage} >
                {account ? (<GenericForm handleOnChange={handleOnChange} btnOnClick={handleCreateAccountClick} label={"Create your nickname"} inputPlaceHolder={"Create your Nickname"} buttonPlaceHolder={"Register"} />) : <h1>
                    Connect your Wallet!
                </h1>}
                
               
                <GenericLink to={"/"} textContent={"Go to Home"}/>
                

            </main>
                

        </>
    )
}


export default Register